{
  "swagger": "2.0",
  "info": {
    "title": "Blog Service",
    "version": "1.0",
    "contact": {
      "name": "amnrah",
      "url": "https://amnrah.xyz",
      "email": "test@amnrah.xyz"
    }
  },
  "tags": [
    {
      "name": "BlogService"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/articles": {
      "post": {
        "summary": "create a new article",
        "description": "| Field ID    | Name      | Type                                                       | Required                  |\n| ----------- | --------- | ---------------------------------------------------------  | ---------------------------- | \n| 1 | title | TYPE_STRING | required | \n| 2 | content | TYPE_STRING |  |",
        "operationId": "BlogService_CreateArticle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Article"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateArticleRequest"
            }
          }
        ],
        "tags": [
          "ARTICLE"
        ]
      }
    },
    "/articles/{id}": {
      "get": {
        "summary": "get an article by id",
        "description": "| Field ID    | Name      | Type                                                       | Required                  |\n| ----------- | --------- | ---------------------------------------------------------  | ---------------------------- | \n| 1 | id | TYPE_STRING | require |",
        "operationId": "BlogService_GetArticle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Article"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "require",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ARTICLE"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Article": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1CreateArticleRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "required"
        },
        "content": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token with prefixed Bearer",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
